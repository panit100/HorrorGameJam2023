///////////////////////////////
// Better Lit Shader
// © Jason Booth, 2021
///////////////////////////////

// Makes everything compatible with Vegetation Studio procedural instancing

BEGIN_OPTIONS
   Stackable "False"   
END_OPTIONS


// this goes in defines so that the code doesn't get mutated or processed in any way
BEGIN_DEFINES

#pragma instancing_options procedural:setupVSPro forwardadd

#ifdef UNITY_PROCEDURAL_INSTANCING_ENABLED

struct IndirectShaderData
{
	float4x4 PositionMatrix;
	float4x4 InversePositionMatrix;
	float4 ControlData;
};

#if defined(SHADER_API_GLCORE) || defined(SHADER_API_D3D11) || defined(SHADER_API_GLES3) || defined(SHADER_API_METAL) || defined(SHADER_API_VULKAN) || defined(SHADER_API_PSSL) || defined(SHADER_API_XBOXONE)
	uniform StructuredBuffer<IndirectShaderData> VisibleShaderDataBuffer;
#endif

#endif

float VSPRenderingLayerMask;

void setupVSPro()
{
#ifdef UNITY_PROCEDURAL_INSTANCING_ENABLED

    #if _HDRP
	    unity_RenderingLayer.x = VSPRenderingLayerMask;
    #endif

	#ifdef unity_ObjectToWorld
	#undef unity_ObjectToWorld
	#endif

	#ifdef unity_WorldToObject
	#undef unity_WorldToObject
	#endif

	unity_LODFade = VisibleShaderDataBuffer[unity_InstanceID].ControlData;
	unity_ObjectToWorld = VisibleShaderDataBuffer[unity_InstanceID].PositionMatrix;
	unity_WorldToObject = VisibleShaderDataBuffer[unity_InstanceID].InversePositionMatrix;
#endif

}
END_DEFINES

